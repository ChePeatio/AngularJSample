Speaking Content

Popular speaking, there are always some little automation tools in our daily work, such as control reporting and data integration. It will cost too much effort to become a firm-wide application according to the firm regulation, even if we paid the effort, there were many application restrictions to follow, which will be a bad trade off. So we need a platform or infrastructure to hold those business flows to reduce the cost, which is the mission of Presto. Now, the user can use Presto GUI to run such flows.

we built Presto Web by taking advantage of Angular JS and other web technologies to provide cross-platform capability, flexible data views and high scalability, to eventually supersede Presto GUI.

And in the future, we will cover query data features and more data views.

Now let's comprehenh the architecture of the Presto Web by comparing with current structure. This is a simplified structure of Presto, GUI uses SOAP protocol to call web service provided by Presto core service. Since there are remote process calls, it's a strong couple between client and server, which is hard to maintain and update. So we designed the architecture of Presto Web like this. It contains 2 parts, Web UI and App Service. Web UI is the data view module, it applies Angular JS framework to achieve simple page multiple views feature, and uses RESTful protocol to transfer data, which can decouple the relation between front-end display and back-end logics. The second part is App Service. As a medium component, it will respond the request from Web UI and call Presto core service by SOAP protocol to run the business flow. It can also access log file system to fetch log content, show log in Web UI. Beyond decouple views and logics, this architecture has many benefits for further development. For example, App Service can record user's actions, which is an important information for developers and maintainers to debug. App Service can also cache the return value to reduce the access burden of Presto core service.

Since Presto Web's screen adaptation is not good enough, I would rather show you some sample pictures. The first view is home page, which lists user's entitled business flows, and the user can create a job instance by clicking relevant button. Then it would jump to the second view named business flows and show the job options. In this page, user can load the job status according to job options. User can also kick start a business flow by clicking start button, and the view will update job status in real time. The last view is log monitor. It's an IT maintain function which could access log information conveniently. Developers can click the corresponding log file, and check the log content easily.

After almost two months intensive learn and practice, Presto Web provides several business functions which can be accessed from most platform by web brower. Based on its extensible architecture, we plan to integrate authentication mechanism of the firm and add more query views to display job information. Front-end test is taken into consideration, too.

Happy time is always short, my summer internship is coming to an end. I spent a substantial period of time, not only learned techniques and business of Mongan Stanley, but also received a lot of friendship from interns and AOE team.